{"version":3,"sources":["images/profiles/chika.png","images/profiles/umaru_chan.jpg","images/profiles/jotaro.jpg","images/profiles/dio.jpg","reducers/conversations.js","reducers/index.js","components/conversation/conversation-search/ConversationSearch.js","components/conversation/conversation-item/ConversationItem.js","components/conversation/conversation-list/ConversationList.js","components/conversation/new-conversation/NewConversation.js","components/chat-title/ChatTitle.js","components/message/Message.js","components/message/MessageList.js","components/chat-form/Chat-Form.js","containers/shell/ChatShell.js","actions/index.js","App.js","index.js"],"names":["module","exports","initialState","conversations","id","imageUrl","require","imageAlt","title","createdAt","latestMessageText","messages","messageText","isMyMessage","selectedConversation","conversationsReducer","state","action","type","newState","find","conversation","conversationId","unshift","textMessage","combineReducers","conversationState","ConversationSearch","placeholder","ConversationItem","isActive","onConversationItemSelected","className","classNames","onClick","src","alt","ConversationList","selectedConversationId","conversationItems","map","key","NewConversation","ChatTitle","Message","message","messageClass","imageThumbNail","MessageList","messageItems","index","ChatForm","onMessageSubmitted","useState","setTextMessage","onSubmit","e","preventDefault","value","onChange","target","connect","dispatch","conversationChanged","App","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94627b77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chika.795342bb.png\";","module.exports = __webpack_public_path__ + \"static/media/umaru_chan.f6a99aef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jotaro.d821006e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dio.dec22100.jpg\";","const initialState = {\r\n    conversations: [\r\n        { \r\n            id: \"1\",\r\n            imageUrl: require(\"../images/profiles/chika.png\"),\r\n            imageAlt: \"Chika\",\r\n            title: \"Chika\",\r\n            createdAt: \"3:06 pm\",\r\n            latestMessageText: \"Ok then. See u later. Have a nice evening xoxo\",\r\n            messages: [\r\n                {\r\n                    imageUrl: null,\r\n                    imageAlt: null,\r\n                    messageText: \"Ok then. See u later. Have a nice evening xoxo\",\r\n                    createdAt: \"3:06 pm\",\r\n                    isMyMessage: true\r\n                },\r\n                {\r\n                    imageUrl: require(\"../images/profiles/chika.png\"),\r\n                    imageAlt: \"Chika\",\r\n                    messageText: \"Well, see you again after school.\",\r\n                    createdAt: \"3:04 pm\",\r\n                    isMyMessage: false\r\n                },\r\n                {\r\n                    imageUrl: null,\r\n                    imageAlt: null,\r\n                    messageText: \"np. tomorrow will be ok?\",\r\n                    createdAt: \"3:02 pm\",\r\n                    isMyMessage: true\r\n                },\r\n                {\r\n                    imageUrl: require(\"../images/profiles/chika.png\"),\r\n                    imageAlt: \"Chika\",\r\n                    messageText: \"go see some movie together\",\r\n                    createdAt: \"2:55 pm\",\r\n                    isMyMessage: false\r\n                },\r\n                {\r\n                    imageUrl: null,\r\n                    imageAlt: null,\r\n                    messageText: \"Thats good\",\r\n                    createdAt:\"2:52 pm\",\r\n                    isMyMessage: true\r\n                },\r\n                {\r\n                    imageUrl: require(\"../images/profiles/chika.png\"),\r\n                    imageAlt: \"Chika\",\r\n                    messageText:\"Nice! They're cute and yummy. Nothing could be better!\",\r\n                    createdAt: \"2:50 pm\",\r\n                    isMyMessage: false\r\n                },\r\n                {\r\n                    imageUrl: null,\r\n                    imageAlt: null,\r\n                    messageText: \"How\\\"s it going?\",\r\n                    createdAt: \"2:48 pm\",\r\n                    isMyMessage: true\r\n                },\r\n                {\r\n                    imageUrl: require(\"../images/profiles/chika.png\"),\r\n                    imageAlt: \"Chika\",\r\n                    messageText: \"Um, is something wrong?\",\r\n                    createdAt: \"2:45 pm\",\r\n                    isMyMessage: false\r\n                },\r\n                {\r\n                    imageUrl: null,\r\n                    imageAlt: null,\r\n                    messageText: \"Hey Chika?\",\r\n                    createdAt: \"2:40 pm\",\r\n                    isMyMessage: true\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: \"2\", \r\n            imageUrl: require(\"../images/profiles/umaru_chan.jpg\"),\r\n            imageAlt: \"Umaru Chan\",\r\n            title: \"Umaru Chan\",\r\n            createdAt: \"Oct 03\",\r\n            latestMessageText: \"Well good talking to you.\",\r\n            messages: [\r\n                {\r\n                    imageUrl: null,\r\n                    imageAlt: null,\r\n                    messageText: \"Well good talking to you.\",\r\n                    createdAt: \"03/11/21 6:35 pm\",\r\n                    isMyMessage: true\r\n                },\r\n                {\r\n                    imageUrl: require(\"../images/profiles/umaru_chan.jpg\"),\r\n                    imageAlt: \"Umaru Chan\",\r\n                    messageText:\"Oh, really? Thank goodness. I was really scared -_-\",\r\n                    createdAt: \"03/11/21 6:34 pm\",\r\n                    isMyMessage: false\r\n                },\r\n                {\r\n                    imageUrl: null,\r\n                    imageAlt: null,\r\n                    messageText: \"They're just trying to scare you.\",\r\n                    createdAt: \"03/11/21 6:34 pm\",\r\n                    isMyMessage: true\r\n                },\r\n                {\r\n                    imageUrl: require(\"../images/profiles/umaru_chan.jpg\"),\r\n                    imageAlt: \"Umaru Chan\",\r\n                    messageText:\"I heard that she doesn't let anyone laugh. The older kids told me that.\",\r\n                    createdAt: \"03/11/21 6:33 pm\",\r\n                    isMyMessage: false\r\n                },\r\n                {\r\n                    imageUrl: null,\r\n                    imageAlt: null,\r\n                    messageText:\"What bad things?\",\r\n                    createdAt: \"03/11/21 6:30 pm\",\r\n                    isMyMessage: true\r\n                },\r\n                {\r\n                    imageUrl: require(\"../images/profiles/umaru_chan.jpg\"),\r\n                    imageAlt: \"Umaru Chan\",\r\n                    messageText: \"I am afraid of the teacher. I have heard bad things about her.\",\r\n                    createdAt: \"03/11/21 6:28 pm\",\r\n                    isMyMessage: false\r\n                },\r\n                {\r\n                    imageUrl: null,\r\n                    imageAlt: null,\r\n                    messageText: \"What is to be afraid about?\",\r\n                    createdAt: \"03/11/21 6:27 pm\",\r\n                    isMyMessage: true\r\n                },\r\n                {\r\n                    imageUrl: require(\"../images/profiles/umaru_chan.jpg\"),\r\n                    imageAlt: \"Umaru Chan\",\r\n                    messageText: \"Hey!!!! Have not spoken to you for a while c: No. I am very afraid.\",\r\n                    createdAt: \"03/11/21 6:23 pm\",\r\n                    isMyMessage: false\r\n                },\r\n                {\r\n                    imageUrl: null,\r\n                    imageAlt: null,\r\n                    messageText: \"Hi. Are you excited for the first month of school?\",\r\n                    createdAt: \"03/11/21 6:18 pm\",\r\n                    isMyMessage: true\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: \"3\", \r\n            imageUrl: require(\"../images/profiles/jotaro.jpg\"),\r\n            imageAlt: \"Jotaro Kujo\",\r\n            title: \"Jotaro Kujo\",\r\n            createdAt: \"28 Sep\",\r\n            latestMessageText: \"Yes\",\r\n            messages: [\r\n                {\r\n                    imageUrl: null,\r\n                    imageAlt: null,\r\n                    messageText: \"Hi\",\r\n                    createdAt: \"1 week ago\",\r\n                    isMyMessage: true\r\n                }\r\n            ]\r\n        },\r\n        { \r\n            id: \"4\",\r\n            imageUrl: require(\"../images/profiles/dio.jpg\"),\r\n            imageAlt: \"Dio Brando\",\r\n            title: \"Dio Brando\",\r\n            createdAt: \"Aug 18\",\r\n            latestMessageText: \"Yeah\",\r\n            messages: [\r\n                {\r\n                    imageUrl: null,\r\n                    imageAlt: null,\r\n                    messageText: \"Hi\",\r\n                    createdAt: \"two months ago\",\r\n                    isMyMessage: true\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    selectedConversation: {}\r\n};\r\n\r\ninitialState.selectedConversation = initialState.conversations[1];\r\n\r\nconst conversationsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case \"SELECTED_CONVERSATION_CHANGED\": {\r\n        const newState = { ...state };\r\n        newState.selectedConversation = \r\n            newState.conversations.find(\r\n                conversation => conversation.id === action.conversationId\r\n            );\r\n\r\n        return newState;\r\n      }\r\n      case \"NEW_MESSAGE_ADDED\": {\r\n        const newState = { ...state };\r\n        newState.selectedConversation = { ...newState.selectedConversation };\r\n        \r\n        newState.selectedConversation.messages.unshift(\r\n            {\r\n                imageUrl: null,\r\n                imageAlt: null,\r\n                messageText: action.textMessage,\r\n                createdAt: \"07/11/21\",\r\n                isMyMessage: true\r\n            },\r\n        )\r\n\r\n        return newState;\r\n      }\r\n      default:\r\n        return state;\r\n\r\n    }\r\n  }\r\n  \r\nexport default conversationsReducer;","import { combineReducers } from 'redux';\r\n\r\nimport conversationState from './conversations';\r\n\r\nexport default combineReducers({\r\n  conversationState\r\n});","import React from 'react';\n\nimport './ConversationSearch.css';\n\nfunction ConversationSearch() {\n    return (\n        <div id=\"search-container\">\n            <input type=\"text\" placeholder=\"Search\" />\n        </div>\n    );\n}\n\nexport default ConversationSearch;","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport './ConversationItem.css';\r\n\r\nconst ConversationItem = (\r\n    {   \r\n        conversation,\r\n        isActive,\r\n        onConversationItemSelected\r\n    }\r\n) => {\r\n    const className = classNames(\"conversation\", {\r\n        \"active\": isActive\r\n    });    \r\n\r\n    return (\r\n        <div className={className} onClick={() => onConversationItemSelected(conversation.id)}>\r\n            <img src={conversation.imageUrl} alt={conversation.imageAlt} />\r\n            <div className=\"title-text\">{conversation.title}</div>\r\n            <div className=\"created-date\">{conversation.createdAt}</div>\r\n            <div className=\"conversation-message\">\r\n                {conversation.latestMessageText}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConversationItem;\r\n\r\n//url img\r\n// \"../../images/profiles/daryl.png\"\r\n// title - name","import React from 'react';\n\nimport ConversationItem from '../conversation-item/ConversationItem';\nimport './ConversationList.css';\n\nconst ConversationList = (\n    { \n        conversations, \n        selectedConversationId, \n        onConversationItemSelected \n    }\n) => {\n    const conversationItems = conversations.map((conversation) => {\n        return <ConversationItem \n            key={conversation.id}\n            onConversationItemSelected={onConversationItemSelected}\n            isActive={conversation.id === selectedConversationId }\n            conversation={conversation} />;\n    });\n\n    return (\n        <div id=\"conversation-list\">\n            {conversationItems}\n        </div>\n    );\n}\n\nexport default ConversationList;","import React from 'react';\n\nimport './NewConversation.css';\n\nfunction NewConversation() {\n    return (\n        <div id=\"new-message-container\">\n            <button>+</button>\n        </div>\n    );\n}\n\nexport default NewConversation;","import React from 'react';\n\nimport './ChatTitle.css';\n\nconst ChatTitle = ({ selectedConversation }) => {\n    return (\n        <div id=\"chat-title\">\n            <img src={selectedConversation.imageUrl} alt={selectedConversation.imageAlt} />\n            <span>{selectedConversation.title}</span>\n        </div>\n    );\n}\n\nexport default ChatTitle;","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport \"./Message.css\"\r\n\r\nconst Message = ({ isMyMessage, message }) => {\r\n    let messageClass = classNames(\"message-row\", {\r\n        \"you-message\": isMyMessage,\r\n        \"other-message\": !isMyMessage\r\n    }),\r\n        imageThumbNail = isMyMessage ? null : <img src={message.imageUrl} alt={message.imageAlt} />;\r\n\r\n    return (\r\n        <div className={messageClass}>\r\n            <div className=\"message-content\">\r\n                {imageThumbNail}\r\n                <div className=\"message-text\">\r\n                    {message.messageText}\r\n                </div>\r\n                <div className=\"message-time\">{message.createdAt}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n\r\n// Yeah I think it's best we do that. Otherwise things won't work well at all. \r\n// I'm adding more text here to test the sizing of the speech bubble and the \r\n// wrapping of it too.\r\n\r\n//isMyMessage = true","import React from 'react';\nimport Message from './Message';\n\nimport './MessageList.css';\n\nconst MessageList = ({ messages }) => {\n\n    const messageItems = messages.map((message, index) => {\n        return <Message\n            key={index}\n            isMyMessage={message.isMyMessage}\n            message={message} />;\n    });\n\n\n    return (\n        <div id=\"chat-message-list\">\n            {messageItems}\n        </div>\n    );\n}\n\nexport default MessageList;","import React, { useState } from 'react';\n\nimport './Chat-Form.css';\n\nconst ChatForm = ({ onMessageSubmitted }) => {\n    const [textMessage, setTextMessage] = useState(\"\");\n    const handleChange = (e) => {\n        setTextMessage(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        onMessageSubmitted(textMessage);\n        setTextMessage('');\n    };\n\n    return (\n        <form id=\"chat-form\" onSubmit={handleSubmit}>          \n            <input \n                type=\"text\" \n                placeholder=\"Type your message\" \n                value={textMessage}\n                onChange={handleChange}/>\n            {/* <img src={require(\"../../images/icons/send-svgrepo-com.svg\")} alt=\"Send\" /> */}\n            <button type=\"submit\">Send</button>\n        </form>\n    );\n}\n\nexport default ChatForm;    ","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { conversationChanged, newMessageAdded } from '../../actions/';\nimport ConversationSearch from '../../components/conversation/conversation-search/ConversationSearch';\nimport ConversationList from '../../components/conversation/conversation-list/ConversationList';\nimport NewConversation from '../../components/conversation/new-conversation/NewConversation';\nimport ChatTitle from '../../components/chat-title/ChatTitle';\nimport MessageList from '../../components/message/MessageList';\nimport ChatForm from '../../components/chat-form/Chat-Form';\n\n\n\nimport './ChatShell.css';\n\nconst ChatShell = ({\n    conversations,\n    selectedConversation,\n    conversationChanged,\n    onMessageSubmitted\n}) => {\n\n    return (\n        <div id=\"chat-container\">\n            <ConversationSearch />\n            <ConversationList\n                onConversationItemSelected={conversationChanged}\n                conversations={conversations}\n                selectedConversationId={selectedConversation.id} />\n            <NewConversation />\n            <ChatTitle selectedConversation={selectedConversation} />\n            <MessageList messages={selectedConversation.messages} />\n            <ChatForm onMessageSubmitted={onMessageSubmitted}/>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        conversations: state.conversationState.conversations,\n        selectedConversation: state.conversationState.selectedConversation\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    conversationChanged: conversationId => dispatch(conversationChanged(conversationId)),\n    onMessageSubmitted: messageText => { dispatch(newMessageAdded(messageText)); }\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ChatShell);","//selected conversation state was added to the store (allows to basically click to see different conversations) \r\n\r\nexport const conversationChanged = conversationId => ({\r\n    type: \"SELECTED_CONVERSATION_CHANGED\",\r\n    conversationId\r\n});\r\n\r\nexport const newMessageAdded = textMessage => ({\r\n    type:\"NEW_MESSAGE_ADDED\",\r\n    textMessage\r\n});","import React from 'react';\n\nimport ChatShell from \"./containers/shell/ChatShell\";\n\nfunction App() {\n  return (\n    <ChatShell />\n  );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from \"./reducers\";\nimport './index.css';\nimport App from './App';\n\n\n//create a reducer\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App /> \n    </Provider>,\n     document.getElementById('root'));\n"],"sourceRoot":""}