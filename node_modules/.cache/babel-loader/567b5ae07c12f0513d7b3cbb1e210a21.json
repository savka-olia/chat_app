{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Olia\\\\Desktop\\\\chat-app-react\\\\src\\\\components\\\\message\\\\Message.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport \"./Message.css\";\n\nconst Message = ({\n  isMyMessage,\n  message\n}) => {\n  let messageClass = classNames(\"message-row\", {\n    \"you-message\": isMyMessage,\n    \"other-message\": !isMyMessage\n  }),\n      imageThumbNail = isMyMessage ? null : React.createElement(\"img\", {\n    src: message.imageUrl,\n    alt: message.imageAlt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: messageClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"message-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, imageThumbNail, React.createElement(\"div\", {\n    className: \"message-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, message.messageText), React.createElement(\"div\", {\n    className: \"message-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, message.createdAt)));\n};\n\nexport default Message; // Yeah I think it's best we do that. Otherwise things won't work well at all. \n// I'm adding more text here to test the sizing of the speech bubble and the \n// wrapping of it too.\n//isMyMessage = true","map":{"version":3,"sources":["C:/Users/Olia/Desktop/chat-app-react/src/components/message/Message.js"],"names":["React","classNames","Message","isMyMessage","message","messageClass","imageThumbNail","imageUrl","imageAlt","messageText","createdAt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,eAAP;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAA8B;AAC1C,MAAIC,YAAY,GAAGJ,UAAU,CAAC,aAAD,EAAgB;AACzC,mBAAeE,WAD0B;AAEzC,qBAAiB,CAACA;AAFuB,GAAhB,CAA7B;AAAA,MAIIG,cAAc,GAAGH,WAAW,GAAG,IAAH,GAAU;AAAK,IAAA,GAAG,EAAEC,OAAO,CAACG,QAAlB;AAA4B,IAAA,GAAG,EAAEH,OAAO,CAACI,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJ1C;AAMA,SACI;AAAK,IAAA,SAAS,EAAEH,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,cADL,EAEI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,CAACK,WADb,CAFJ,EAKI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BL,OAAO,CAACM,SAAvC,CALJ,CADJ,CADJ;AAWH,CAlBD;;AAoBA,eAAeR,OAAf,C,CAEA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport \"./Message.css\"\r\n\r\nconst Message = ({ isMyMessage, message }) => {\r\n    let messageClass = classNames(\"message-row\", {\r\n        \"you-message\": isMyMessage,\r\n        \"other-message\": !isMyMessage\r\n    }),\r\n        imageThumbNail = isMyMessage ? null : <img src={message.imageUrl} alt={message.imageAlt} />;\r\n\r\n    return (\r\n        <div className={messageClass}>\r\n            <div className=\"message-content\">\r\n                {imageThumbNail}\r\n                <div className=\"message-text\">\r\n                    {message.messageText}\r\n                </div>\r\n                <div className=\"message-time\">{message.createdAt}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n\r\n// Yeah I think it's best we do that. Otherwise things won't work well at all. \r\n// I'm adding more text here to test the sizing of the speech bubble and the \r\n// wrapping of it too.\r\n\r\n//isMyMessage = true"]},"metadata":{},"sourceType":"module"}