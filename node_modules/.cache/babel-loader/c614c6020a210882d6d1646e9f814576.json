{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Olia\\\\Desktop\\\\chat-app-react\\\\src\\\\chat\\\\message\\\\Message.js\";\nimport React from 'react';\nimport \"./Message.css\";\n\nconst Message = props => {\n  let messageClass = \"message-row\",\n      imageThumbNail = null;\n\n  if (props.isMyMessage) {\n    messageClass += \" your-message\";\n  } else {\n    messageClass += \" other-message\";\n    imageThumbNail = React.createElement(\"img\", {\n      src: props.imageUrl,\n      alt: props.imageAlt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: messageClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"message-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, imageThumbNail, React.createElement(\"div\", {\n    className: \"message-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.messageText), React.createElement(\"div\", {\n    className: \"message-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.createdAt)));\n};\n\nexport default Message; // Yeah I think it's best we do that. Otherwise things won't work well at all. \n// I'm adding more text here to test the sizing of the speech bubble and the \n// wrapping of it too.\n//isMyMessage = true","map":{"version":3,"sources":["C:/Users/Olia/Desktop/chat-app-react/src/chat/message/Message.js"],"names":["React","Message","props","messageClass","imageThumbNail","isMyMessage","imageUrl","imageAlt","messageText","createdAt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,eAAP;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,MAAIC,YAAY,GAAG,aAAnB;AAAA,MACIC,cAAc,GAAG,IADrB;;AAGA,MAAGF,KAAK,CAACG,WAAT,EAAsB;AAClBF,IAAAA,YAAY,IAAI,eAAhB;AACH,GAFD,MAEO;AACHA,IAAAA,YAAY,IAAI,gBAAhB;AACAC,IAAAA,cAAc,GAAG;AAAK,MAAA,GAAG,EAAEF,KAAK,CAACI,QAAhB;AAA0B,MAAA,GAAG,EAAEJ,KAAK,CAACK,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB;AAEH;;AAED,SACI;AAAK,IAAA,SAAS,EAAEJ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,cADL,EAEI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,KAAK,CAACM,WADV,CAFJ,EAKI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BN,KAAK,CAACO,SAArC,CALJ,CADR,CADJ;AAWH,CAvBD;;AAyBA,eAAeR,OAAf,C,CAEA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\r\n\r\nimport \"./Message.css\"\r\n\r\nconst Message = (props) => {\r\n    let messageClass = \"message-row\",\r\n        imageThumbNail = null;\r\n\r\n    if(props.isMyMessage) {\r\n        messageClass += \" your-message\";\r\n    } else {\r\n        messageClass += \" other-message\";\r\n        imageThumbNail = <img src={props.imageUrl} alt={props.imageAlt} />\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={messageClass}>\r\n                <div className=\"message-content\">\r\n                    {imageThumbNail}\r\n                    <div className=\"message-text\">\r\n                       {props.messageText}\r\n                    </div>\r\n                    <div className=\"message-time\">{props.createdAt}</div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n\r\n// Yeah I think it's best we do that. Otherwise things won't work well at all. \r\n// I'm adding more text here to test the sizing of the speech bubble and the \r\n// wrapping of it too.\r\n\r\n//isMyMessage = true"]},"metadata":{},"sourceType":"module"}